name: Update AUR Package - zen-twilight-bin

on:
  schedule:
    # Runs every hour at the start of the hour
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  check_for_updates:
    runs-on: ubuntu-latest
    outputs:
      needs_update: ${{ steps.version_check.outputs.needs_update }}
      new_pkgver: ${{ steps.version_check.outputs.new_pkgver }}
      commit_message: ${{ steps.version_check.outputs.commit_message }}
    steps:
      - name: Compare versions and decide action
        id: version_check
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/zen-browser/desktop/releases/tags/twilight | jq -r '.name' | sed -e 's/Twilight build - //' -e 's/ at.*//' -e 's/ /-/g' -e 's/[()]//g' -e 's/-/\./g')
          echo "Latest GitHub version: $LATEST_VERSION"

          CURRENT_VERSION=$(curl -s 'https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=zen-twilight-bin' | grep '^pkgver=' | sed 's/^pkgver=//')
          echo "Current AUR version: $CURRENT_VERSION"

          if [[ -z "$LATEST_VERSION" || "$LATEST_VERSION" == "null" ]]; then
            echo "Could not retrieve latest version from GitHub."
            echo "needs_update=false" >> "$GITHUB_OUTPUT"
          elif [[ "$LATEST_VERSION" != "$CURRENT_VERSION" ]]; then
            echo "New version found. Preparing update."
            echo "needs_update=true" >> "$GITHUB_OUTPUT"
            echo "new_pkgver=$LATEST_VERSION" >> "$GITHUB_OUTPUT"
            echo "commit_message=chore: Update to version $LATEST_VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "Package is up-to-date."
            echo "needs_update=false" >> "$GITHUB_OUTPUT"
          fi

  aur-publish:
    needs: check_for_updates
    if: needs.check_for_updates.outputs.needs_update == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update PKGBUILD
        run: |
          sed "s/PACKAGE_VERSION/${{ needs.check_for_updates.outputs.new_pkgver }}/g" template/twilight/PKGBUILD_twilight_template > twilight/PKGBUILD
          echo "PKGBUILD generated from template for version ${{ needs.check_for_updates.outputs.new_pkgver }}"

      - name: 'Save PKGBUILD for Validation'
        uses: actions/upload-artifact@v4
        with:
          name: PKGBUILD
          path: twilight/PKGBUILD
          retention-days: 1

      - name: Publish AUR package
        uses: KSXGitHub/github-actions-deploy-aur@v3.0.1
        with:
          pkgname: zen-twilight-bin
          pkgbuild: twilight/PKGBUILD
          assets: |
            twilight/policies.json
            twilight/zen-twilight.desktop
            twilight/zen-twilight.sh
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: ${{ needs.check_for_updates.outputs.commit_message }}
          ssh_keyscan_types: rsa,ecdsa,ed25519
